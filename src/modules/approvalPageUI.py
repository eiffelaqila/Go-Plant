
# This file was generated by the Tkinter Designer by Parth Jadhav
# https://github.com/ParthJadhav/Tkinter-Designer


from pathlib import Path
import mysql.connector as sql
from tkinter import *
from tkinter import messagebox
# # Explicit imports to satisfy Flake8
# from tkinter import Tk, Canvas, Entry, Text, Button, PhotoImage


OUTPUT_PATH = Path(__file__).parent
ASSETS_PATH = OUTPUT_PATH / Path("../../img")


def relative_to_assets(path: str) -> Path:
    return ASSETS_PATH / Path(path)

class approvalPageUI():
    def __init__(self, root, db, frame):
        from modules.stockManagementUI import stockManagementUI
        self.root = root
        self.db = db
        self.curIdx = 0
        self.frame = frame

        mycon = sql.connect(host=self.db.host, port=self.db.port, user=self.db.username, password=self.db.password, database='goplant')
        cur = mycon.cursor()
        command = "SELECT nama_tanaman, id_pelanggan, tanggal_awal, tanggal_akhir, jumlah_sewa, id_orderlist FROM OrderList ol LEFT OUTER JOIN Tanaman t on ol.id_tanaman = t.id_tanaman WHERE status = 0"
        cur.execute(command)
        datas = cur.fetchall()

        frame.destroy()

        canvas = Canvas(
            root,
            bg = "#FFFFFF",
            height = 720,
            width = 1280,
            bd = 0,
            highlightthickness = 0,
            relief = "ridge"
        )
        
        global logoGoPlant
        logoGoPlant = PhotoImage(
            file=relative_to_assets("logoGoplant.png"))
        btnHome = Button(
            image=logoGoPlant,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: stockManagementUI(self.root, self.db, canvas),
            relief="flat",
            bg="#FFFFFF"
        )
        btnHome.place(
            x=80.0,
            y=20.0,
            width=186.0,
            height=60.0)
        canvas.place(x = 0, y = 0)
        canvas.create_rectangle(
            0.0,
            110.0,
            1280.0,
            720.0,
            fill="#DCE1DD",
            outline="")

        canvas.create_text(
            268.0,
            67.0,
            anchor="nw",
            text="Admin Mode",
            fill="#000000",
            font=("Inter", 16 * -1)
        )

        canvas.create_text(
            175.0,
            147.0,
            anchor="nw",
            text="Approval Page",
            fill="#000000",
            font=("Inter", 32 * -1)
        )
        global btnStockManagement_image
        global btnApprovalPage_image
        global btnSearch_image

        btnStockManagement_image = PhotoImage(
            file=relative_to_assets("btnStockManagement.png"))
        btnStockManagement = Button(
            image=btnStockManagement_image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: stockManagementUI(self.root, self.db, canvas),
            relief="flat"
        )
        btnStockManagement.place(
            x=1027.0,
            y=31.0,
            width=186.0,
            height=55.0
        )

        btnApprovalPage_image = PhotoImage(
            file=relative_to_assets("btnApprovalPage.png"))
        btnApprovalPage = Button(
            image=btnApprovalPage_image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: messagebox.showinfo("Approval Page","Anda sudah berada di approval page"),
            relief="flat"
        )
        btnApprovalPage.place(
            x=830.0,
            y=31.0,
            width=186.0,
            height=55.0
        )

        btnSearch_image = PhotoImage(
            file=relative_to_assets("btnSearch.png"))
        btnSearch = Button(
            image=btnSearch_image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: messagebox.showinfo("Not Found","Button ini tidak pernah ada"),
            relief="flat"
        )
        btnSearch.place(
            x=632.0,
            y=31.0,
            width=185.0,
            height=55.0
        )
        self.displayListReq(canvas, datas, self.curIdx, root)


    def displayListReq(self, canvas, datas, curIdx, root):
        
        global btnAcc_image
        global btnReject_image
        # frame buat list request
        listReq = Frame(canvas, bg="#DCE1DD")
        listReq.place(x=0, y=213, height=507, width=1280)
        
        btnAcc_image = PhotoImage(
            file=relative_to_assets("btnAcc.png"))
        btnAcc = Button(
            image=btnAcc_image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.AcceptAll(canvas, datas, root),
            relief="flat"
        )
        btnAcc.place(
            x=675.0,
            y=625.0,
            width=186.0,
            height=51.0
        )

        btnReject_image = PhotoImage(
            file=relative_to_assets("btnReject.png"))
        btnReject = Button(
            image=btnReject_image,
            borderwidth=0,
            highlightthickness=0,
            command=lambda: self.RejectAll(canvas, datas, root),
            relief="flat"
        )
        btnReject.place(
            x=867.0,
            y=625.0,
            width=186.0,
            height=51.0
        )
        
        if(curIdx>0):
        # Left Button
            leftButton = Button(listReq, text="<", font = "Montserrat 18 bold", activebackground="#FFFFFF", fg = "#FFFFFF", bg = "#216869", command=lambda:self.moveLeft(canvas, datas))
            leftButton.place(x=18, y=200, anchor="center")
        if(curIdx+4<len(datas)):
        # Right Button
            rightButton = Button(listReq, text=">", font = "Montserrat 18 bold", activebackground="#FFFFFF", fg = "#FFFFFF", bg = "#216869", command=lambda:self.moveRight(canvas, datas))
            rightButton.place(x=1262, y=200, anchor="center")
        xi = 175
        yi = 0
        i = 0# buat yg di increment
        if(len(datas) == 0):
            noData = Label(canvas, text="Belum ada request", font=("Inter", 40, "bold"), fg="#000000", bg="#DCE1DD", justify=CENTER)
            noData.place(x=300, y=349)
        else:
            global imgAcc1
            global imgRej1
            imgAcc1 = PhotoImage(file=relative_to_assets("btnAcc1.png"))
            imgRej1 = PhotoImage(file=relative_to_assets("btnReject1.png"))
            if(curIdx <= len(datas)-1):
                card1=Frame(listReq, highlightbackground="#0A750F", highlightthickness=1, bg="#CFE6DB")
                card1.place(x=xi, y=yi, height=88, width=876)
                # nama tanaman
                namaTanaman = Label(card1, text=str(datas[curIdx][0]), font=("Inter", 14, "bold"), fg="#000000", bg="#CFE6DB")
                namaTanaman.place(x=20, y=8)
                # Cust ID
                custID = Label(card1, text="Customer ID : " + str(datas[curIdx][1]), font=("Inter", 12, "bold"), fg="#000000", bg="#CFE6DB")
                custID.place(x=20, y=33)
                # masa sewa
                masaSewa = Label(card1, text=str(datas[curIdx][2]) + " - " + str(datas[curIdx][3]), font=("Inter", 12), fg="#0A4D2E", bg="#CFE6DB")
                masaSewa.place(x=20, y=56)   
                # Quantity
                quantityLabel = Label(card1, text="Qty : " + str(datas[curIdx][4]), font=("Inter", 12), fg="#0A4D2E", bg="#CFE6DB")
                quantityLabel.place(x=583, y=30)
                # Accept Button
                accButton1 = Button(card1, image=imgAcc1, borderwidth=0, highlightthickness=0, bg="#CFE6DB", command=lambda: self.Accept(datas[curIdx][5], canvas, root), relief="flat")
                accButton1.place(x = 700, y = 11)
                # Reject Button
                rejButton1 = Button(card1, image=imgRej1, borderwidth=0, highlightthickness=0, bg="#CFE6DB", command=lambda: self.Reject(datas[curIdx][5], canvas, root), relief="flat")
                rejButton1.place(x = 779, y = 11)
                yi += 103
                if(curIdx <= len(datas)-2):
                    card2=Frame(listReq, highlightbackground="#0A750F", highlightthickness=1, bg="#CFE6DB")
                    card2.place(x=xi, y=yi, height=88, width=876)
                    # nama tanaman
                    namaTanaman = Label(card2, text=str(datas[curIdx+1][0]), font=("Inter", 14, "bold"), fg="#000000", bg="#CFE6DB")
                    namaTanaman.place(x=20, y=8)
                    # Cust ID
                    custID = Label(card2, text="Customer ID : " + str(datas[curIdx+1][1]), font=("Inter", 12, "bold"), fg="#000000", bg="#CFE6DB")
                    custID.place(x=20, y=33)
                    # masa sewa
                    masaSewa = Label(card2, text=str(datas[curIdx+1][2]) + " - " + str(datas[curIdx+1][3]), font=("Inter", 12), fg="#0A4D2E", bg="#CFE6DB")
                    masaSewa.place(x=20, y=56)   
                    # Quantity
                    quantityLabel = Label(card2, text="Qty : " + str(datas[curIdx+1][4]), font=("Inter", 12), fg="#0A4D2E", bg="#CFE6DB")
                    quantityLabel.place(x=583, y=30)
                    # Accept Button
                    accButton2 = Button(card2, image=imgAcc1, borderwidth=0, highlightthickness=0, bg="#CFE6DB", command=lambda: self.Accept(datas[curIdx][5], canvas, root), relief="flat")
                    accButton2.place(x = 700, y = 11)
                    # Reject Button
                    rejButton2 = Button(card2, image=imgRej1, borderwidth=0, highlightthickness=0, bg="#CFE6DB", command=lambda: self.Reject(datas[curIdx][5], canvas, root), relief="flat")
                    rejButton2.place(x = 779, y = 11)
                    yi += 103
                    if(curIdx <= len(datas)-3):
                        card3=Frame(listReq, highlightbackground="#0A750F", highlightthickness=1, bg="#CFE6DB")
                        card3.place(x=xi, y=yi, height=88, width=876)
                        # nama tanaman
                        namaTanaman = Label(card3, text=str(datas[curIdx+2][0]), font=("Inter", 14, "bold"), fg="#000000", bg="#CFE6DB")
                        namaTanaman.place(x=20, y=8)
                        # Cust ID
                        custID = Label(card3, text="Customer ID : " + str(datas[curIdx+2][1]), font=("Inter", 12, "bold"), fg="#000000", bg="#CFE6DB")
                        custID.place(x=20, y=33)
                        # masa sewa
                        masaSewa = Label(card3, text=str(datas[curIdx+2][2]) + " - " + str(datas[curIdx+2][3]), font=("Inter", 12), fg="#0A4D2E", bg="#CFE6DB")
                        masaSewa.place(x=20, y=56)   
                        # Quantity
                        quantityLabel = Label(card3, text="Qty : " + str(datas[curIdx+2][4]), font=("Inter", 12), fg="#0A4D2E", bg="#CFE6DB")
                        quantityLabel.place(x=583, y=30)
                        # Accept Button
                        accButton3 = Button(card3, image=imgAcc1, borderwidth=0, highlightthickness=0, bg="#CFE6DB", command=lambda: self.Accept(datas[curIdx][5], canvas, root), relief="flat")
                        accButton3.place(x = 700, y = 11)
                        # Reject Button
                        rejButton3 = Button(card3, image=imgRej1, borderwidth=0, highlightthickness=0, bg="#CFE6DB", command=lambda: self.Reject(datas[curIdx][5], canvas, root), relief="flat")
                        rejButton3.place(x = 779, y = 11)
                        yi += 103
                        if(curIdx <= len(datas)-4):
                            card4=Frame(listReq, highlightbackground="#0A750F", highlightthickness=1, bg="#CFE6DB")
                            card4.place(x=xi, y=yi, height=88, width=876)
                            # nama tanaman
                            namaTanaman = Label(card4, text=str(datas[curIdx+3][0]), font=("Inter", 14, "bold"), fg="#000000", bg="#CFE6DB")
                            namaTanaman.place(x=20, y=8)
                            # Cust ID
                            custID = Label(card4, text="Customer ID : " + str(datas[curIdx+3][1]), font=("Inter", 12, "bold"), fg="#000000", bg="#CFE6DB")
                            custID.place(x=20, y=33)
                            # masa sewa
                            masaSewa = Label(card4, text=str(datas[curIdx+3][2]) + " - " + str(datas[curIdx+3][3]), font=("Inter", 12), fg="#0A4D2E", bg="#CFE6DB")
                            masaSewa.place(x=20, y=56)   
                            # Quantity
                            quantityLabel = Label(card4, text="Qty : " + str(datas[curIdx+3][4]), font=("Inter", 12), fg="#0A4D2E", bg="#CFE6DB")
                            quantityLabel.place(x=583, y=30)
                            # Accept Button
                            accButton4 = Button(card4, image=imgAcc1, borderwidth=0, highlightthickness=0, bg="#CFE6DB", command=lambda: self.Accept(datas[curIdx][5], canvas, root), relief="flat")
                            accButton4.place(x = 700, y = 11)
                            #Reect Button
                            rejButton4 = Button(card4, image=imgRej1, borderwidth=0, highlightthickness=0, bg="#CFE6DB", command=lambda: self.Reject(datas[curIdx][5], canvas, root), relief="flat")
                            rejButton4.place(x = 779, y = 11)
                            yi += 103
     

    def moveLeft(self, canvas, datas):
        if (self.curIdx > 4):
            self.displayListReq(canvas, datas, self.curIdx - 4, self.root)
            self.curIdx = self.curIdx - 4
        else:
            self.curIdx = 0
            self.displayListReq(canvas, datas, self.curIdx, self.root)

    def moveRight(self, canvas, datas):
        if (self.curIdx + 4 < len(datas)):
            self.displayListReq(canvas, datas, self.curIdx + 4, self.root)
            self.curIdx = self.curIdx + 4
        else:
            self.displayListReq(canvas, datas, self.curIdx, self.root)
    
    def Accept(self, id_orderlist, canvas, root):
        mycon = sql.connect(host=self.db.host, port=self.db.port, user=self.db.username, password=self.db.password, database='goplant')
        cur = mycon.cursor()
        command = "UPDATE orderlist SET status = 1 WHERE id_orderlist = " + str(id_orderlist)
        cur.execute(command)
        mycon.commit()
        approvalPageUI(root, self.db, canvas)

    def Reject(self, id_orderlist, canvas, root):
        mycon = sql.connect(host=self.db.host, port=self.db.port, user=self.db.username, password=self.db.password, database='goplant')
        cur = mycon.cursor()
        command = "DELETE FROM orderlist WHERE id_orderlist = " + str(id_orderlist)
        cur.execute(command)
        mycon.commit()
        approvalPageUI(root, self.db, canvas)
    
    def AcceptAll(self, canvas, datas, root):
        for data in datas:
            self.Accept(data[5], canvas, root)
    
    def RejectAll(self, canvas, datas, root):
        for data in datas:
            self.Reject(data[5], canvas, root)
